Angular Material - 6
--------------------
(Past Trainings - table, sorting, filtering, pagination)

1. Training Service
  
  - Add getCompletedOrCancelledExercises() method
  
      getCompletedOrCancelledExercises() {
        return [ ...this.exercises ];
      }

--------------------------------------------
2. Past Trainings Component

  - Material Module
  
    - Import MatTableModule and add it to exports array
    
        import {MatTableModule} from '@angular/material/table';
        
  - past-trainings.component.ts
  
    - Add these imports
    
        import { MatTableDataSource } from '@angular/material/table';
        import { Exercise } from '../exercise.model';
  
    - Add displayedColumns array property
    
        displayedColumns = ['date', 'name', 'duration', 'calories', 'state'];
    
        - Note: In the above array, the strings should match with the value of matColumnDef in column template definitions that are defined below
    
    - Add dataSource property

        dataSource = new MatTableDataSource<Exercise>();

    - Inject TrainingService into the constructor
    
    - Implement ngOnInit() method and assign exercises to the dataSource property
    
        ngOnInit() {
          this.dataSource.data = this.trainingService.fetchCompletedOrCancelledExercises();
        }

  - past-trainings.component.html
  
    - Define a Material table and assign data source
    
        <mat-table [dataSource]="dataSource">
          ...
        </mat-table>
      
    - Define column templates for Date, Name, Calories, Duration & State within <mat-table>

        <ng-container matColumnDef="date">
          <mat-header-cell *matHeaderCellDef mat-sort-header>Date</mat-header-cell>
          <mat-cell *matCellDef="let element">{{ element.date.toDate() | date }}</mat-cell>
        </ng-container>

        <ng-container matColumnDef="name">
          <mat-header-cell *matHeaderCellDef mat-sort-header>Name</mat-header-cell>
          <mat-cell *matCellDef="let element">{{ element.name }}</mat-cell>
        </ng-container>

        <ng-container matColumnDef="calories">
          <mat-header-cell *matHeaderCellDef mat-sort-header>Calories</mat-header-cell>
          <mat-cell *matCellDef="let element">{{ element.calories | number }}</mat-cell>
        </ng-container>

        <ng-container matColumnDef="duration">
          <mat-header-cell *matHeaderCellDef mat-sort-header>Duration</mat-header-cell>
          <mat-cell *matCellDef="let element">{{ element.duration | number }}</mat-cell>
        </ng-container>

        <ng-container matColumnDef="state">
          <mat-header-cell *matHeaderCellDef mat-sort-header>State</mat-header-cell>
          <mat-cell *matCellDef="let element">{{ element.state }}</mat-cell>
        </ng-container>

    - Define row templates
    
        <mat-header-row *matHeaderRowDef="displayedColumns"></mat-header-row>
        <mat-row *matRowDef="let row; columns: displayedColumns;"></mat-row>

--------------------------------------------
3. Add Sorting Feature

  - Material Module

    - Import MatSortModule and add it to exports array
    
        import { MatSortModule } from "@angular/material/sort";

  - Past Trainings Component

    - past-trainings.component.html
    
      - Add the matSort directive to <mat-table>
      
          <mat-table [dataSource]="dataSource" matSort>
            ...
          </mat-table>
          
      - Add mat-sort-header to each column header cell that should trigger sorting

          <mat-header-cell *matHeaderCellDef mat-sort-header>Date</mat-header-cell>
            ...
          </mat-header-cell>
          
    - past-trainings.component.ts
    
      - Add this import
      
          import { MatSort } from "@angular/material/sort";
    
      - Add a @ViewChild() property that references the MatSort directive
      
          @ViewChild(MatSort, { static: true }) sort: MatSort;
          
      - Implement ngAfterViewInit(), assign the MatSort property defined above to MatTableDataSource.sort property
      
          ngAfterViewInit() {
            this.dataSource.sort = this.sort;
          }

--------------------------------------------
4. Add Filtering Feature

  - Past Trainings Component
  
    - past-trainings.component.html
          
      - Add a text box for specifying filter text
      - Specify a callback function for handling keyup event, pass user entered value to the event handler
      
          <div fxLayoutAlign="center center">
            <mat-form-field fxFlex="40%">
              <input matInput type="text" (keyup)="doFilter($event.target.value)" placeholder="Filter">
            </mat-form-field>
          </div>

    - past-trainings.component.ts 
    
      - Add doFilter() method - the keyup event handler. 
      - This should take the filter string as input parameter. 
      - Assign the filter string to MatTableDataSource.filter property

          doFilter(filterValue: string) {
            this.dataSource.filter = filterValue.trim().toLowerCase();
          }

--------------------------------------------
5. Add Pagination

  - Material Module

    - Import MatPaginatorModule and add it to exports array

        import { MatPaginatorModule } from "@angular/material/paginator";

  - Past Trainings Component

    - past-trainings.component.html
    
      - Add paginator component below the <mat-table> component

          <mat-paginator [pageSize]="5" [pageSizeOptions]="[2, 5, 10]"></mat-paginator>
          
    - past-trainings.component.ts`
    
        - Add this import
        
            import { MatPaginator } from "@angular/material/paginator";
      
        - Add a @ViewChild() property that references the MatPaginator directive
        
            @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;
            
        - Update ngAfterViewInit(), assign the MatPaginator property defined above to MatTableDataSource.paginator property
        
            ngAfterViewInit() {
              this.dataSource.sort = this.sort;
              this.dataSource.paginator = this.paginator;
            }
